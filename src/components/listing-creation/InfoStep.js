import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import React from 'react';
import { motion } from 'framer-motion';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '../ui/card';
import { Input } from '../ui/input';
import { Textarea } from '../ui/textarea';
import { Label } from '../ui/label';
import { Button } from '../ui/Button';
import { Info, Sparkles } from 'lucide-react';
const InfoStep = ({ formData, onFormChange, errors }) => {
    const conditions = ["New", "Like New", "Good", "Fair", "Used"];
    return (_jsx(motion.div, { initial: { opacity: 0, x: -50 }, animate: { opacity: 1, x: 0 }, exit: { opacity: 0, x: 50 }, transition: { duration: 0.3 }, children: _jsxs(Card, { className: "border-0 shadow-xl rounded-2xl overflow-hidden", children: [_jsx(CardHeader, { className: "bg-gradient-to-br from-card to-muted/20 pb-4", children: _jsxs("div", { className: "flex items-center gap-3", children: [_jsx("div", { className: "w-12 h-12 bg-primary/10 flex items-center justify-center rounded-full", children: _jsx(Info, { className: "h-6 w-6 text-primary" }) }), _jsxs("div", { children: [_jsxs(CardTitle, { className: "text-2xl font-bold flex items-center gap-2", children: [_jsx(Sparkles, { className: "h-5 w-5 text-amber-400" }), "Basic Information"] }), _jsx(CardDescription, { className: "mt-1", children: "Start with the essentials to attract renters." })] })] }) }), _jsxs(CardContent, { className: "p-6 space-y-6", children: [_jsxs("div", { className: "space-y-2", children: [_jsx(Label, { htmlFor: "title", className: "text-base font-medium", children: "Listing Title" }), _jsx(Input, { id: "title", value: formData.title, onChange: (e) => onFormChange({ title: e.target.value }), placeholder: "e.g., Professional Canon Camera EOS R5", className: "text-lg p-4", maxLength: 80 }), errors.title && _jsx("p", { className: "text-sm text-destructive", children: errors.title })] }), _jsxs("div", { className: "space-y-2", children: [_jsx(Label, { htmlFor: "description", className: "text-base font-medium", children: "Description" }), _jsx(Textarea, { id: "description", value: formData.description, onChange: (e) => onFormChange({ description: e.target.value }), placeholder: "Describe your item in detail. Mention its features, condition, and any accessories included.", className: "min-h-[150px] text-base p-4", maxLength: 2000 }), errors.description && _jsx("p", { className: "text-sm text-destructive", children: errors.description })] }), _jsxs("div", { className: "space-y-3", children: [_jsx(Label, { className: "text-base font-medium", children: "Condition" }), _jsx("div", { className: "flex flex-wrap gap-2", children: conditions.map((condition) => (_jsx(Button, { type: "button", variant: formData.condition === condition ? 'default' : 'outline', onClick: () => onFormChange({ condition }), className: "rounded-full", children: condition }, condition))) }), errors.condition && _jsx("p", { className: "text-sm text-destructive", children: errors.condition })] })] })] }) }, "info"));
};
export default InfoStep;
