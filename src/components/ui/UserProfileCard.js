import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from 'react';
import { Mail, MapPin, Calendar, Flag, Shield } from 'lucide-react';
import { formatDistanceToNow } from 'date-fns';
import { Avatar, AvatarImage, AvatarFallback } from './Avatar';
import { Badge } from './badge';
import { Button } from './button';
import { Card, CardContent, CardFooter, CardHeader } from './card';
import { ReportUserDialog } from './ReportUserDialog';
import { motion } from 'framer-motion';
export const UserProfileCard = ({ user, variant = 'default', className = '', showReportButton = true, }) => {
    const [isHovered, setIsHovered] = useState(false);
    const isCompact = variant === 'compact';
    return (_jsx(motion.div, { whileHover: {
            y: -5,
            transition: { duration: 0.2 }
        }, initial: { opacity: 0, y: 20 }, animate: { opacity: 1, y: 0 }, transition: { duration: 0.3 }, onHoverStart: () => setIsHovered(true), onHoverEnd: () => setIsHovered(false), children: _jsxs(Card, { className: `overflow-hidden ${isCompact ? 'max-w-xs' : 'max-w-md'} ${className}`, children: [_jsxs(CardHeader, { className: "relative pb-0", children: [_jsx("div", { className: "absolute top-0 left-0 w-full h-16 bg-gradient-to-r from-blue-500 to-purple-500 opacity-80" }), _jsxs("div", { className: "flex items-center gap-4 z-10 pt-8", children: [_jsxs(Avatar, { className: `border-4 border-background ${isCompact ? 'h-16 w-16' : 'h-20 w-20'}`, children: [_jsx(AvatarImage, { src: user.avatar_url }), _jsx(AvatarFallback, { children: user.full_name.charAt(0) })] }), _jsxs("div", { children: [_jsxs("div", { className: "flex items-center gap-2", children: [_jsx("h3", { className: "font-semibold text-lg", children: user.full_name }), user.is_verified && (_jsx(Badge, { variant: "success", className: "h-5", children: "Verified" }))] }), user.role && (_jsxs(Badge, { variant: "outline", className: "mt-1", children: [_jsx(Shield, { className: "h-3 w-3 mr-1" }), user.role] }))] })] })] }), _jsxs(CardContent, { className: `pt-4 ${isCompact ? 'space-y-2' : 'space-y-4'}`, children: [!isCompact && user.bio && (_jsx("p", { className: "text-sm text-muted-foreground", children: user.bio })), _jsxs("div", { className: "grid grid-cols-1 gap-2", children: [user.email && (_jsxs("div", { className: "flex items-center gap-2 text-sm", children: [_jsx(Mail, { className: "h-4 w-4 text-muted-foreground" }), _jsx("span", { children: user.email })] })), user.location && (_jsxs("div", { className: "flex items-center gap-2 text-sm", children: [_jsx(MapPin, { className: "h-4 w-4 text-muted-foreground" }), _jsx("span", { children: user.location })] })), user.created_at && (_jsxs("div", { className: "flex items-center gap-2 text-sm", children: [_jsx(Calendar, { className: "h-4 w-4 text-muted-foreground" }), _jsxs("span", { children: ["Member for ", formatDistanceToNow(new Date(user.created_at))] })] }))] }), !isCompact && (_jsxs("div", { className: "grid grid-cols-3 gap-2 pt-2", children: [_jsxs("div", { className: "bg-muted/50 p-2 rounded-md text-center", children: [_jsx("div", { className: "text-lg font-semibold", children: user.listings_count || 0 }), _jsx("div", { className: "text-xs text-muted-foreground", children: "Listings" })] }), _jsxs("div", { className: "bg-muted/50 p-2 rounded-md text-center", children: [_jsx("div", { className: "text-lg font-semibold", children: user.reviews_count || 0 }), _jsx("div", { className: "text-xs text-muted-foreground", children: "Reviews" })] }), _jsxs("div", { className: "bg-muted/50 p-2 rounded-md text-center", children: [_jsx("div", { className: "text-lg font-semibold", children: user.average_rating?.toFixed(1) || '-' }), _jsx("div", { className: "text-xs text-muted-foreground", children: "Rating" })] })] }))] }), showReportButton && (_jsx(CardFooter, { className: `${isCompact ? 'pt-0' : 'pt-2'}`, children: _jsx(ReportUserDialog, { userId: user.id, userName: user.full_name, trigger: _jsxs(Button, { variant: "ghost", size: "sm", className: "text-muted-foreground hover:text-destructive", children: [_jsx(Flag, { className: "h-4 w-4 mr-1" }), "Report user"] }) }) }))] }) }));
};
