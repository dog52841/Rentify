-- Create the messages table
CREATE TABLE IF NOT EXISTS messages (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  created_at TIMESTAMPTZ DEFAULT NOW(),
  user_id UUID REFERENCES auth.users(id) ON DELETE CASCADE,
  content TEXT NOT NULL,
  read BOOLEAN DEFAULT FALSE,
  title TEXT,
  type TEXT DEFAULT 'system'
);

-- Enable RLS
ALTER TABLE messages ENABLE ROW LEVEL SECURITY;

-- Policies for messages
CREATE POLICY "Users can view their own messages"
  ON messages FOR SELECT
  USING (auth.uid() = user_id);

CREATE POLICY "Users can update their own messages (e.g., mark as read)"
  ON messages FOR UPDATE
  USING (auth.uid() = user_id);

-- Function to send a system message
CREATE OR REPLACE FUNCTION send_system_message(
  target_user_id UUID,
  message_title TEXT,
  message_content TEXT
)
RETURNS void
LANGUAGE plpgsql
SECURITY DEFINER
AS $$
BEGIN
  INSERT INTO public.messages (user_id, title, content)
  VALUES (target_user_id, message_title, message_content);
END;
$$;

-- Grant execute on the function
GRANT EXECUTE ON FUNCTION send_system_message(UUID, TEXT, TEXT) TO authenticated; 